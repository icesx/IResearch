/**
 * Program  : AbsKryoContext.java<br/>
 * Author   : i<br/>
 * Create   : Jul 3, 2017 8:13:35 PM<br/>
 *
 * Copyright 1997-2013 by 0dog.cn ltd.,
 * All rights reserved.
 */
package cn.i.xportal.kryo.register;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;

import com.esotericsoftware.kryo.Kryo;
import com.esotericsoftware.kryo.io.Input;
import com.esotericsoftware.kryo.io.Output;

import cn.i.xportal.kryo.stream.StreamProvide;

public class KryoContext {
	private Kryo kryo = new Kryo();

	public <T> KryoContext register(AbsRegisterProvide<T> provide) {
		kryo.register(provide.regClass(), provide.serializer(kryo));
		return this;
	}

	public <T> byte[] serializa(T t, StreamProvide provide) {
		ByteArrayOutputStream os = new ByteArrayOutputStream();
		Output output = provide.output(os);
		kryo.writeClassAndObject(output, t);
		output.flush();
		return output.toBytes();
	}

	public Object unSerializa(byte[] bs, StreamProvide provide) {
		Input input = provide.input(new ByteArrayInputStream(bs));
		return kryo.readClassAndObject(input);
	}
}
